{
  "abi": [],
  "bytecode": {
    "object": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bb22f836500b98e3efda5e07d5787aa970bf077d60a4677dd5a7419990b3f5064736f6c63430008130033",
    "sourceMap": "215:101:94:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:101:94;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bb22f836500b98e3efda5e07d5787aa970bf077d60a4677dd5a7419990b3f5064736f6c63430008130033",
    "sourceMap": "215:101:94:-:0;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint128\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v3-core/libraries/FixedPoint128.sol\":\"FixedPoint128\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/contracts/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/\"]},\"sources\":{\"lib/v3-core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0xa69f5f6f35ba6ce7fea02ac6abfab4f3d870d57fe757c265cd6f3228dd16bb09\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4f5ab2a98d395c486dc1c699d6e7101a80d7a00c045d0130ddac4c6dc155123\",\"dweb:/ipfs/QmVGtoS9FmoGJpYw9ubdnCQdHseYJZqHKEzERpdqNXAocW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin/=lib/openzeppelin/contracts/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/v3-core/libraries/FixedPoint128.sol": "FixedPoint128"
      },
      "libraries": {}
    },
    "sources": {
      "lib/v3-core/libraries/FixedPoint128.sol": {
        "keccak256": "0xa69f5f6f35ba6ce7fea02ac6abfab4f3d870d57fe757c265cd6f3228dd16bb09",
        "urls": [
          "bzz-raw://a4f5ab2a98d395c486dc1c699d6e7101a80d7a00c045d0130ddac4c6dc155123",
          "dweb:/ipfs/QmVGtoS9FmoGJpYw9ubdnCQdHseYJZqHKEzERpdqNXAocW"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/v3-core/libraries/FixedPoint128.sol",
    "id": 75866,
    "exportedSymbols": {
      "FixedPoint128": [
        75865
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:272:94",
    "nodes": [
      {
        "id": 75860,
        "nodeType": "PragmaDirective",
        "src": "46:23:94",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 75865,
        "nodeType": "ContractDefinition",
        "src": "215:101:94",
        "nodes": [
          {
            "id": 75864,
            "nodeType": "VariableDeclaration",
            "src": "244:68:94",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "Q128",
            "nameLocation": "270:4:94",
            "scope": 75865,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 75862,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "244:7:94",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
              "id": 75863,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "277:35:94",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
                "typeString": "int_const 3402...(31 digits omitted)...1456"
              },
              "value": "0x100000000000000000000000000000000"
            },
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FixedPoint128",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 75861,
          "nodeType": "StructuredDocumentation",
          "src": "73:142:94",
          "text": "@title FixedPoint128\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          75865
        ],
        "name": "FixedPoint128",
        "nameLocation": "223:13:94",
        "scope": 75866,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 94
}